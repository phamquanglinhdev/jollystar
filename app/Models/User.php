<?php

namespace App\Models;

// use Illuminate\Contracts\Auth\MustVerifyEmail;
use App\Models\Scopes\BusinessScope;
use Backpack\CRUD\app\Models\Traits\CrudTrait;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;
use Laravel\Sanctum\HasApiTokens;

class User extends Authenticatable
{
    use HasApiTokens, HasFactory, Notifiable, CrudTrait;

//    public static function boot()
//    {
//        parent::boot(); // TODO: Change the autogenerated stub
//        static::addGlobalScope(new BusinessScope);
//    }

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $guarded = [
        'id'
    ];
    protected $table = 'users';
    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'remember_token',
    ];

    /**
     * The attributes that should be cast.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
        'extras' => 'json'
    ];

    public function delete()
    {
        $this->update([
            'disable' => 1,
            'email' => "deleteUser" . Str::random(20) . "@delete.com"
        ]);
        return redirect()->back();
    }

    public function setPasswordAttribute($value)
    {
        if ($value != null && $value != "")
            $this->attributes["password"] = Hash::make($value);
    }
}
