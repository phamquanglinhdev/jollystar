<?php

namespace App\Models;

use App\Models\Scopes\BusinessScope;
use Backpack\CRUD\app\Models\Traits\CrudTrait;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Carbon;

class TeacherSalary extends Model
{
    use CrudTrait;

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
//        static::addGlobalScope(new BusinessScope);
    }

    protected $table = "logs";
    use HasFactory;

    public function Teacher(): \Illuminate\Database\Eloquent\Relations\BelongsTo
    {
        return $this->belongsTo(Teacher::class, "teacher_id", "id");
    }

    public function Grade(): \Illuminate\Database\Eloquent\Relations\BelongsTo
    {
        return $this->belongsTo(Grade::class, "grade_id", "id");
    }

    public function Salary(): string
    {

        return number_format($this->salary_count());
    }

    public function salary_count(): string
    {
        $startTime = Carbon::parse($this->start);
        $finishTime = Carbon::parse($this->end);
        $totalDuration = $finishTime->diffInMinutes($startTime);
        return $totalDuration / 60 * $this->salary_per_hour;
    }
}
